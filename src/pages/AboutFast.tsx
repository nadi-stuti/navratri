import React, { useState } from "react";
import { useLanguage } from "../contexts/LanguageContext";
import { navratriFastingInformation } from "../model/fasting-information";
import { FastingRule, ScriptureReference } from "../types/enhanced-models";
import "./AboutFast.css";

const AboutFast = () => {
  const { currentLanguage, t } = useLanguage();
  const [expandedSection, setExpandedSection] = useState<string | null>(null);
  const [expandedRule, setExpandedRule] = useState<string | null>(null);
  const [expandedScripture, setExpandedScripture] = useState<string | null>(
    null
  );

  const toggleSection = (section: string) => {
    setExpandedSection(expandedSection === section ? null : section);
  };

  const toggleRule = (ruleId: string) => {
    setExpandedRule(expandedRule === ruleId ? null : ruleId);
  };

  const toggleScripture = (index: number) => {
    const scriptureKey = `scripture-${index}`;
    setExpandedScripture(
      expandedScripture === scriptureKey ? null : scriptureKey
    );
  };

  const getTranslatedContent = (content: any) => {
    return content[currentLanguage as keyof typeof content] || content.en || "";
  };

  const renderSection = (
    title: string,
    content: React.ReactNode,
    sectionKey: string
  ) => (
    <div className="fasting-section">
      <button
        onClick={() => toggleSection(sectionKey)}
        className={`section-header ${
          expandedSection === sectionKey ? "expanded" : ""
        }`}
      >
        <span className="section-title">{title}</span>
        <span className="section-toggle">
          {expandedSection === sectionKey ? "тИТ" : "+"}
        </span>
      </button>
      {expandedSection === sectionKey && (
        <div className="section-content">{content}</div>
      )}
    </div>
  );

  const renderReasonsForFasting = () => (
    <div className="reasons-grid">
      <div className="reason-item">
        <h4>
          {t("pages.fasting.reasons.spiritualTitle", "ЁЯХЙя╕П Spiritual Benefits")}
        </h4>
        <p>
          {getTranslatedContent(
            navratriFastingInformation.reasonsForFasting.spiritual
          )}
        </p>
      </div>

      <div className="reason-item">
        <h4>
          {t("pages.fasting.reasons.physicalTitle", "ЁЯТк Physical Benefits")}
        </h4>
        <p>
          {getTranslatedContent(
            navratriFastingInformation.reasonsForFasting.physical
          )}
        </p>
      </div>

      <div className="reason-item">
        <h4>{t("pages.fasting.reasons.mentalTitle", "ЁЯза Mental Benefits")}</h4>
        <p>
          {getTranslatedContent(
            navratriFastingInformation.reasonsForFasting.mental
          )}
        </p>
      </div>

      <div className="reason-item">
        <h4>
          {t("pages.fasting.reasons.culturalTitle", "ЁЯПЫя╕П Cultural Benefits")}
        </h4>
        <p>
          {getTranslatedContent(
            navratriFastingInformation.reasonsForFasting.cultural
          )}
        </p>
      </div>
    </div>
  );

  const renderNavratriFastingSignificance = () => (
    <div className="significance-content">
      <div className="significance-item">
        <h4>{t("pages.fasting.significance.purposeTitle", "ЁЯОп Purpose")}</h4>
        <p>
          {getTranslatedContent(
            navratriFastingInformation.navratriFastingSignificance.purpose
          )}
        </p>
      </div>

      <div className="significance-item">
        <h4>{t("pages.fasting.significance.benefitsTitle", "ЁЯМЯ Benefits")}</h4>
        <p>
          {getTranslatedContent(
            navratriFastingInformation.navratriFastingSignificance.benefits
          )}
        </p>
      </div>

      <div className="significance-item">
        <h4>
          {t(
            "pages.fasting.significance.spiritualAspectsTitle",
            "ЁЯФо Spiritual Aspects"
          )}
        </h4>
        <p>
          {getTranslatedContent(
            navratriFastingInformation.navratriFastingSignificance
              .spiritualAspects
          )}
        </p>
      </div>
    </div>
  );

  const renderScriptureReferences = () => (
    <div className="scriptures-content">
      <p className="section-description">
        {t(
          "pages.fasting.scripturesIntro",
          "References about fasting in Hindu scriptures:"
        )}
      </p>

      {navratriFastingInformation.scriptureReferences.map(
        (scripture: ScriptureReference, index: number) => (
          <div key={index} className="scripture-item">
            <button
              onClick={() => toggleScripture(index)}
              className={`scripture-header ${
                expandedScripture === `scripture-${index}` ? "expanded" : ""
              }`}
            >
              <span className="scripture-title">
                {getTranslatedContent(scripture.source)}{" "}
                {scripture.chapter && `- ${scripture.chapter}`}{" "}
                {scripture.verse && `(${scripture.verse})`}
              </span>
              <span className="scripture-toggle">
                {expandedScripture === `scripture-${index}` ? "тИТ" : "+"}
              </span>
            </button>

            {expandedScripture === `scripture-${index}` && (
              <div className="scripture-content">
                <div className="scripture-text">
                  <h5>
                    {t(
                      "pages.fasting.scripture.sanskritTitle",
                      "Sanskrit Text:"
                    )}
                  </h5>
                  <p className="sanskrit-text">{scripture.text}</p>
                </div>

                <div className="scripture-text">
                  <h5>
                    {t(
                      "pages.fasting.scripture.transliterationTitle",
                      "Transliteration:"
                    )}
                  </h5>
                  <p className="transliteration-text">
                    {getTranslatedContent(scripture.transliteration)}
                  </p>
                </div>

                <div className="scripture-text">
                  <h5>
                    {t(
                      "pages.fasting.scripture.translationTitle",
                      "Translation:"
                    )}
                  </h5>
                  <p className="translation-text">
                    {getTranslatedContent(scripture.translation)}
                  </p>
                </div>
              </div>
            )}
          </div>
        )
      )}
    </div>
  );

  const renderFastingRules = () => (
    <div className="rules-content">
      <p className="section-description">
        {currentLanguage === "hi"
          ? "рдирд╡рд░рд╛рддреНрд░рд┐ рд╡реНрд░рдд рдХреЗ рдирд┐рдпрдо рдФрд░ рджрд┐рд╢рд╛рдирд┐рд░реНрджреЗрд╢:"
          : currentLanguage === "ta"
          ? "роиро╡ро░ро╛родрпНродро┐ро░ро┐ ро╡ро┐ро░род ро╡ро┐родро┐роХро│рпН рооро▒рпНро▒рпБроорпН ро╡ро┤ро┐роХро╛роЯрпНроЯрпБродро▓рпНроХро│рпН:"
          : currentLanguage === "mr"
          ? "рдирд╡рд░рд╛рддреНрд░реА рд╡реНрд░рддрд╛рдЪреЗ рдирд┐рдпрдо рдЖрдгрд┐ рдорд╛рд░реНрдЧрджрд░реНрд╢рди:"
          : "Navratri fasting rules and guidelines:"}
      </p>

      {navratriFastingInformation.fastingRules.map((rule: FastingRule) => (
        <div key={rule.id} className={`rule-item ${rule.importance}`}>
          <button
            onClick={() => toggleRule(rule.id)}
            className={`rule-header ${
              expandedRule === rule.id ? "expanded" : ""
            }`}
          >
            <span className="rule-title">
              {rule.importance === "mandatory"
                ? "ЁЯФ┤ "
                : rule.importance === "recommended"
                ? "ЁЯЯб "
                : "ЁЯЯв "}
              {getTranslatedContent(rule.title)}
            </span>
            <span className="rule-toggle">
              {expandedRule === rule.id ? "тИТ" : "+"}
            </span>
          </button>

          {expandedRule === rule.id && (
            <div className="rule-content">
              <p>{getTranslatedContent(rule.description)}</p>
              <span className="rule-importance">
                {rule.importance === "mandatory"
                  ? currentLanguage === "hi"
                    ? "рдЕрдирд┐рд╡рд╛рд░реНрдп"
                    : currentLanguage === "ta"
                    ? "роХроЯрпНроЯро╛ропроорпН"
                    : currentLanguage === "mr"
                    ? "рдЕрдирд┐рд╡рд╛рд░реНрдп"
                    : "MANDATORY"
                  : rule.importance === "recommended"
                  ? currentLanguage === "hi"
                    ? "рд╕реБрдЭрд╛рд╡рд┐рдд"
                    : currentLanguage === "ta"
                    ? "рокро░ро┐роирпНродрпБро░рпИроХрпНроХрокрпНрокроЯрпНроЯродрпБ"
                    : currentLanguage === "mr"
                    ? "рд╢рд┐рдлрд╛рд░рд╕реАрдд"
                    : "RECOMMENDED"
                  : currentLanguage === "hi"
                  ? "рд╡реИрдХрд▓реНрдкрд┐рдХ"
                  : currentLanguage === "ta"
                  ? "ро╡ро┐ро░рпБрокрпНрокрооро╛ройродрпБ"
                  : currentLanguage === "mr"
                  ? "рдкрд░реНрдпрд╛рдпреА"
                  : "OPTIONAL"}
              </span>
            </div>
          )}
        </div>
      ))}
    </div>
  );

  const renderFoodLists = () => (
    <div className="food-lists">
      <div className="food-list allowed">
        <h4>
          тЬЕ{" "}
          {currentLanguage === "hi"
            ? "рдЕрдиреБрдорддрд┐рдд рдЦрд╛рджреНрдп рдкрджрд╛рд░реНрде"
            : currentLanguage === "ta"
            ? "роЕройрпБроородро┐роХрпНроХрокрпНрокроЯрпНроЯ роЙрогро╡рпБроХро│рпН"
            : currentLanguage === "mr"
            ? "рдкрд░рд╡рд╛рдирдЧреА рдЕрд╕рд▓реЗрд▓реЗ рдкрджрд╛рд░реНрде"
            : "Allowed Foods"}
        </h4>
        <ul>
          {(
            navratriFastingInformation.allowedFoods[
              currentLanguage as keyof typeof navratriFastingInformation.allowedFoods
            ] ||
            navratriFastingInformation.allowedFoods.en ||
            []
          ).map((food: string, index: number) => (
            <li key={index}>{food}</li>
          ))}
        </ul>
      </div>

      <div className="food-list forbidden">
        <h4>
          тЭМ{" "}
          {currentLanguage === "hi"
            ? "рдирд┐рд╖рд┐рджреНрдз рдЦрд╛рджреНрдп рдкрджрд╛рд░реНрде"
            : currentLanguage === "ta"
            ? "родроЯрпИроЪрпЖропрпНропрокрпНрокроЯрпНроЯ роЙрогро╡рпБроХро│рпН"
            : currentLanguage === "mr"
            ? "рдирд┐рд╖рд┐рджреНрдз рдкрджрд╛рд░реНрде"
            : "Forbidden Foods"}
        </h4>
        <ul>
          {(
            navratriFastingInformation.forbiddenFoods[
              currentLanguage as keyof typeof navratriFastingInformation.forbiddenFoods
            ] ||
            navratriFastingInformation.forbiddenFoods.en ||
            []
          ).map((food: string, index: number) => (
            <li key={index}>{food}</li>
          ))}
        </ul>
      </div>
    </div>
  );

  const renderHealthConsiderations = () => (
    <div className="health-content">
      <div className="health-item">
        <h4>ЁЯТЪ Health Benefits</h4>
        <p>
          {getTranslatedContent(
            navratriFastingInformation.healthConsiderations.benefits
          )}
        </p>
      </div>

      <div className="health-item">
        <h4>тЪая╕П Precautions</h4>
        <p>
          {getTranslatedContent(
            navratriFastingInformation.healthConsiderations.precautions
          )}
        </p>
      </div>

      <div className="health-item">
        <h4>ЁЯЪл Who Should Avoid Strict Fasting</h4>
        <p>
          {getTranslatedContent(
            navratriFastingInformation.healthConsiderations.whoShouldAvoid
          )}
        </p>
      </div>
    </div>
  );

  const renderModernAdaptations = () => (
    <div className="adaptations-content">
      <div className="adaptation-item">
        <h4>ЁЯТ╝ Working Professionals</h4>
        <p>
          {getTranslatedContent(
            navratriFastingInformation.modernAdaptations.workingProfessionals
          )}
        </p>
      </div>

      <div className="adaptation-item">
        <h4>ЁЯУЪ Students</h4>
        <p>
          {getTranslatedContent(
            navratriFastingInformation.modernAdaptations.students
          )}
        </p>
      </div>

      <div className="adaptation-item">
        <h4>ЁЯС┤ Elderly</h4>
        <p>
          {getTranslatedContent(
            navratriFastingInformation.modernAdaptations.elderly
          )}
        </p>
      </div>

      <div className="adaptation-item">
        <h4>ЁЯС╢ Children</h4>
        <p>
          {getTranslatedContent(
            navratriFastingInformation.modernAdaptations.children
          )}
        </p>
      </div>
    </div>
  );

  return (
    <div className="about-fast-container">
      <div className="about-fast-header">
        <h1>
          {currentLanguage === "hi"
            ? "рдирд╡рд░рд╛рддреНрд░рд┐ рдЙрдкрд╡рд╛рд╕"
            : currentLanguage === "ta"
            ? "роиро╡ро░ро╛родрпНродро┐ро░ро┐ ро╡ро┐ро░родроорпН"
            : currentLanguage === "mr"
            ? "рдирд╡рд░рд╛рддреНрд░реА рдЙрдкрд╡рд╛рд╕"
            : "Navratri Fasting"}
        </h1>
        <p className="header-subtitle">
          {currentLanguage === "hi"
            ? "рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рд╢реБрджреНрдзрддрд╛ рдФрд░ рджреИрд╡реАрдп рдЖрд╢реАрд░реНрд╡рд╛рдж рдХрд╛ рдорд╛рд░реНрдЧ"
            : currentLanguage === "ta"
            ? "роЖройрпНроорпАроХ родрпВропрпНроорпИ рооро▒рпНро▒рпБроорпН родрпЖропрпНро╡рпАроХ роЖроЪрпАро░рпНро╡ро╛родродрпНродро┐ройрпН рокро╛родрпИ"
            : currentLanguage === "mr"
            ? "рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рд╢реБрджреНрдзрддрд╛ рдЖрдгрд┐ рджреИрд╡реА рдЖрд╢реАрд░реНрд╡рд╛рджрд╛рдЪрд╛ рдорд╛рд░реНрдЧ"
            : "A Path to Spiritual Purity and Divine Blessings"}
        </p>
      </div>

      <div className="fasting-sections">
        {renderSection(
          currentLanguage === "hi"
            ? "ЁЯХЙя╕П рд╣рд┐рдВрджреВ рдзрд░реНрдо рдореЗрдВ рдЙрдкрд╡рд╛рд╕ рдХреЗ рдХрд╛рд░рдг"
            : currentLanguage === "ta"
            ? "ЁЯХЙя╕П роЗроирпНродрпБ роородродрпНродро┐ро▓рпН ро╡ро┐ро░родродрпНродро┐ройрпН роХро╛ро░рогроЩрпНроХро│рпН"
            : currentLanguage === "mr"
            ? "ЁЯХЙя╕П рд╣рд┐рдВрджреВ рдзрд░реНрдорд╛рдд рдЙрдкрд╡рд╛рд╕рд╛рдЪреА рдХрд╛рд░рдгреЗ"
            : "ЁЯХЙя╕П Reasons for Fasting in Hinduism",
          renderReasonsForFasting(),
          "reasons"
        )}

        {renderSection(
          currentLanguage === "hi"
            ? "ЁЯМЯ рдирд╡рд░рд╛рддреНрд░рд┐ рдЙрдкрд╡рд╛рд╕ рдХрд╛ рдорд╣рддреНрд╡"
            : currentLanguage === "ta"
            ? "ЁЯМЯ роиро╡ро░ро╛родрпНродро┐ро░ро┐ ро╡ро┐ро░родродрпНродро┐ройрпН роорпБроХрпНроХро┐ропродрпНродрпБро╡роорпН"
            : currentLanguage === "mr"
            ? "ЁЯМЯ рдирд╡рд░рд╛рддреНрд░реА рдЙрдкрд╡рд╛рд╕рд╛рдЪреЗ рдорд╣рддреНрддреНрд╡"
            : "ЁЯМЯ Navratri Fasting Significance",
          renderNavratriFastingSignificance(),
          "significance"
        )}

        {renderSection(
          currentLanguage === "hi"
            ? "ЁЯУЬ рд╣рд┐рдВрджреВ рд╢рд╛рд╕реНрддреНрд░реЛрдВ рдореЗрдВ рдЙрдкрд╡рд╛рд╕ рдХреЗ рд╕рдВрджрд░реНрдн"
            : currentLanguage === "ta"
            ? "ЁЯУЬ роЗроирпНродрпБ роЪро╛ро╕рпНродро┐ро░роЩрпНроХро│ро┐ро▓рпН ро╡ро┐ро░родроорпН рокро▒рпНро▒ро┐роп роХрпБро▒ро┐рокрпНрокрпБроХро│рпН"
            : currentLanguage === "mr"
            ? "ЁЯУЬ рд╣рд┐рдВрджреВ рд╢рд╛рд╕реНрддреНрд░рд╛рдВрдордзреАрд▓ рдЙрдкрд╡рд╛рд╕рд╛рдЪреЗ рд╕рдВрджрд░реНрдн"
            : "ЁЯУЬ Hindu Scripture References About Fasting",
          renderScriptureReferences(),
          "scriptures"
        )}

        {renderSection(
          currentLanguage === "hi"
            ? "ЁЯУЛ рдирд╡рд░рд╛рддреНрд░рд┐ рдЙрдкрд╡рд╛рд╕ рдХреЗ рдирд┐рдпрдо рдФрд░ рджрд┐рд╢рд╛рдирд┐рд░реНрджреЗрд╢"
            : currentLanguage === "ta"
            ? "ЁЯУЛ роиро╡ро░ро╛родрпНродро┐ро░ро┐ ро╡ро┐ро░род ро╡ро┐родро┐роХро│рпН рооро▒рпНро▒рпБроорпН ро╡ро┤ро┐роХро╛роЯрпНроЯрпБродро▓рпНроХро│рпН"
            : currentLanguage === "mr"
            ? "ЁЯУЛ рдирд╡рд░рд╛рддреНрд░реА рдЙрдкрд╡рд╛рд╕рд╛рдЪреЗ рдирд┐рдпрдо рдЖрдгрд┐ рдорд╛рд░реНрдЧрджрд░реНрд╢рди"
            : "ЁЯУЛ Comprehensive Fasting Rules and Guidelines",
          renderFastingRules(),
          "rules"
        )}

        {renderSection(
          currentLanguage === "hi"
            ? "ЁЯНО рдЦрд╛рджреНрдп рдкрджрд╛рд░реНрдереЛрдВ рдХреА рд╕реВрдЪреА"
            : currentLanguage === "ta"
            ? "ЁЯНО роЙрогро╡рпБрокрпН рокрпКро░рпБроЯрпНроХро│ро┐ройрпН рокроЯрпНроЯро┐ропро▓рпН"
            : currentLanguage === "mr"
            ? "ЁЯНО рдЦрд╛рджреНрдпрдкрджрд╛рд░реНрдерд╛рдВрдЪреА рдпрд╛рджреА"
            : "ЁЯНО Food Guidelines",
          renderFoodLists(),
          "foods"
        )}

        {renderSection(
          currentLanguage === "hi"
            ? "ЁЯТК рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рдВрдмрдВрдзреА рд╡рд┐рдЪрд╛рд░"
            : currentLanguage === "ta"
            ? "ЁЯТК роЪрпБроХро╛родро╛ро░ рокро░ро┐роЪрпАро▓ройрпИроХро│рпН"
            : currentLanguage === "mr"
            ? "ЁЯТК рдЖрд░реЛрдЧреНрдп рд╕рдВрдмрдВрдзреА рд╡рд┐рдЪрд╛рд░"
            : "ЁЯТК Health Considerations",
          renderHealthConsiderations(),
          "health"
        )}

        {renderSection(
          currentLanguage === "hi"
            ? "ЁЯПв рдЖрдзреБрдирд┐рдХ рдЬреАрд╡рдирд╢реИрд▓реА рдХреЗ рд▓рд┐рдП рдЕрдиреБрдХреВрд▓рди"
            : currentLanguage === "ta"
            ? "ЁЯПв роиро╡рпАрой ро╡ро╛ро┤рпНроХрпНроХрпИ роорпБро▒рпИроХрпНроХро╛рой родро┤рпБро╡ро▓рпНроХро│рпН"
            : currentLanguage === "mr"
            ? "ЁЯПв рдЖрдзреБрдирд┐рдХ рдЬреАрд╡рдирд╢реИрд▓реАрд╕рд╛рдареА рдЕрдиреБрдХреВрд▓рди"
            : "ЁЯПв Modern Lifestyle Adaptations",
          renderModernAdaptations(),
          "adaptations"
        )}
      </div>

      <div className="about-fast-footer">
        <p>
          {currentLanguage === "hi"
            ? "рднрд╛рд░рдд рдореЗрдВ рдЙрдкрд╡рд╛рд╕ рдХреЗ рдирд┐рдпрдо рд╕рдореБрджрд╛рдп рд╕реЗ рд╕рдореБрджрд╛рдп рдореЗрдВ рднрд┐рдиреНрди рд╣реЛрддреЗ рд╣реИрдВред рдореЗрдиреВ рддрдп рдХрд░рдиреЗ рд╕реЗ рдкрд╣рд▓реЗ рдЕрдкрдиреЗ рдкрд░рд┐рд╡рд╛рд░ рдХреЗ рд╕рджрд╕реНрдпреЛрдВ рдФрд░ рдмреБрдЬреБрд░реНрдЧреЛрдВ рд╕реЗ рд╕рд▓рд╛рд╣ рд▓реЗрдирд╛ рд╣рдореЗрд╢рд╛ рдмреЗрд╣рддрд░ рд╣реЛрддрд╛ рд╣реИред"
            : currentLanguage === "ta"
            ? "роЗроирпНродро┐ропро╛ро╡ро┐ро▓рпН ро╡ро┐ро░род ро╡ро┐родро┐роХро│рпН роЪроорпВроХродрпНродро┐ро▒рпНроХрпБ роЪроорпВроХроорпН рооро╛ро▒рпБрокроЯрпБроорпН. роорпЖройрпБро╡рпИ роорпБроЯро┐ро╡рпБ роЪрпЖропрпНро╡родро▒рпНроХрпБ роорпБройрпН роЙроЩрпНроХро│рпН роХрпБроЯрпБроорпНрок роЙро▒рпБрокрпНрокро┐ройро░рпНроХро│рпН рооро▒рпНро▒рпБроорпН рокрпЖро░ро┐ропро╡ро░рпНроХро│рпБроЯройрпН роЖро▓рпЛроЪро┐рокрпНрокродрпБ роОрокрпНрокрпЛродрпБроорпН роиро▓рпНро▓родрпБ."
            : currentLanguage === "mr"
            ? "рднрд╛рд░рддрд╛рдд рдЙрдкрд╡рд╛рд╕рд╛рдЪреЗ рдирд┐рдпрдо рд╕рдореБрджрд╛рдпрд╛рдиреБрд╕рд╛рд░ рдмрджрд▓рддрд╛рдд. рдореЗрдиреВ рдард░рд╡рдгреНрдпрд╛рдкреВрд░реНрд╡реА рдЖрдкрд▓реНрдпрд╛ рдХреБрдЯреБрдВрдмрд╛рддреАрд▓ рд╕рджрд╕реНрдпрд╛рдВрд╢реА рдЖрдгрд┐ рд╡рдбрд┐рд▓рдзрд╛рд▒реНрдпрд╛рдВрд╢реА рд╕рд▓реНрд▓рд╛рдорд╕рд▓рдд рдХрд░рдгреЗ рдиреЗрд╣рдореАрдЪ рдЪрд╛рдВрдЧрд▓реЗ рдЕрд╕рддреЗ."
            : "In India, fasting rules vary from community to community. It is always better to check with your family members and elders before deciding the menu."}
        </p>
      </div>
    </div>
  );
};

export default AboutFast;
